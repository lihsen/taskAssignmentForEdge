syntax = "proto3";

package message;

service Node2MasterConn {
    rpc JoinGroup(JoinRequest) returns (JoinReply) {}
    rpc ExitGroup(ExitRequest) returns (ExitReply) {}
    rpc Heartbeat(HeartbeatRequest) returns (HeartbeatReply) {}
    rpc SendTaskResult(TaskResultReq) returns (TaskResultResp) {}
}

message JoinRequest {
    string ipAddr = 1; //tell master the ip of this node
    int32 port = 2;    //tell master the port of the node
}

message JoinReply {
    bool reply = 1;
}

message ExitRequest {
    string ipAddr = 1;
}

message ExitReply {
    bool reply = 1;
}

message HeartbeatRequest {
    string ipAddr = 1;
}

message HeartbeatReply {
    bool ack = 1;
}

message TaskResultReq {
    string TaskNme   = 1;
    int32 TaskId     = 2;
    int32 StatusCode = 3;
    string err       = 4;
}

message TaskResultResp {
    bool ack =  1;
}

service Master2NodeConn {
    rpc AssignTask(stream TaskChunk) returns (SendStatus) {}
}

message TaskInfo
{
    string TaskName = 1;
    int32  TaskId   = 2;
}

message TaskChunk {
    TaskInfo Info = 1;
    bytes Content = 2;
}

enum SendStatusCode {
    Unknown = 0;
    Ok = 1;
    Failed = 2;
}

message SendStatus {
    string Message = 1;
    SendStatusCode Code = 2;
}
